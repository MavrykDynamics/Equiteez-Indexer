# generated by DipDup 8.0.0

from __future__ import annotations

from typing import Dict

from pydantic import BaseModel, ConfigDict


class Config(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    lpFee: str
    maintainerFee: str
    feeDecimals: str


class GuidePriceConfig(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    priceModel: str
    appraisalPrice: str
    fixedPricePercent: str
    orderbookPricePercent: str


class QuoteToken(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    tokenContractAddress: str
    tokenId: str


class BaseToken(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    tokenContractAddress: str
    tokenId: str


class QuoteLpToken(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    tokenContractAddress: str
    tokenId: str


class BaseLpToken(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    tokenContractAddress: str
    tokenId: str


class DodoMavStorage(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    superAdmin: str
    newSuperAdmin: str | None = None
    rwaOrderbookAddress: str
    metadata: Dict[str, str]
    pauseLedger: Dict[str, bool]
    config: Config
    guidePriceConfig: GuidePriceConfig
    quoteToken: QuoteToken
    baseToken: BaseToken
    quoteLpToken: QuoteLpToken
    baseLpToken: BaseLpToken
    quoteBalance: str
    baseBalance: str
    targetQuoteTokenAmount: str
    targetBaseTokenAmount: str
    baseBalanceLimit: str
    quoteBalanceLimit: str
    rStatus: str
    guidePrice: str
    slippageFactor: str
    lambdaLedger: Dict[str, str]
