# generated by DipDup 8.0.0

from __future__ import annotations

from typing import Any, Dict

from pydantic import BaseModel, ConfigDict


class Token(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fa12Token: str


class Fa2Token(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    tokenContractAddress: str
    tokenId: str


class Token1(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fa2Token: Fa2Token


class Currency(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fa12: str


class Fa2(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    tokenContractAddress: str
    tokenId: str


class Currency1(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fa2: Fa2


class Currency2(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    tez: Dict[str, Any]


class CreateListingParameter(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    amount: str
    pricePerUnit: str
    quickBuyPrice: str | None = None
    expiryTime: str | None = None
    token: Token | Token1
    currency: Currency | Currency1 | Currency2
